{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/googleMap.js","js/directives/googlePlace.js","js/directives/imageUpload.js","js/models/listing.js","js/controllers/listings.js","js/controllers/main.js","js/models/place.js","js/controllers/places.js","js/router.js","js/models/users.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","googleMap","$window","restrict","replace","template","scope","places","link","$scope","element","map","google","maps","Map","center","lat","lng","zoom","$watch","console","log","length","forEach","place","marker","Marker","position","animation","Animation","DROP","infowindow","InfoWindow","content","name","id","addListener","open","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","setCenter","setZoom","googlePlace","require","attrs","model","options","types","componentRestrictions","country","autocomplete","Autocomplete","getPlace","latLng","geometry","location","toJSON","google_place_id","place_id","address","formatted_address","phone_number","formatted_phone_number","icon","rating","website","$setViewValue","val","imageUpload","reader","FileReader","templateUrl","base64","active","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","Listing","$resource","update","method","ListingsIndexController","listingsIndex","all","query","ListingsShowController","deleteListing","listingsShow","listing","$remove","get","params","delete","ListingsEditController","listingsEdit","$update","ListingsNewController","save","listingsNew","placeId","MainController","$rootScope","logout","secureState","toState","toParams","main","message","isAuthenticated","protectedStates","includes","parseFloat","getPayload","isLoggedIn","$on","Place","PlacesIndexController","placesIndex","PlacesShowController","deletePlace","placesShow","PlacesEditController","placesEdit","PlacesNewController","placesNew","Router","$stateProvider","$urlRouterProvider","state","url","controller","otherwise","User","UsersIndexController","usersIndex","UsersShowController","deleteUser","usersShow","isCurrentUser","currentUserId","UsersEditController","usersEdit","localStorage","removeItem","angular","module","constant","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n.directive('googleMap', googleMap);\n\ngoogleMap.$inject = ['$window'];\n\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\">Google Map Here</div>',\n    scope: {\n      places: '='\n    },\n    link: function ($scope, element) {\n      const map = new $window.google.maps.Map(element[0], {\n        center: {\n          lat: 51.5087903,\n          lng: -0.1137814\n        },\n        zoom: 14\n      });\n\n      $scope.$watch('places.length', () => {\n        console.log($scope.places.length);\n        if($scope.places.length > 0) {\n          $scope.places.forEach((place) => {\n            const marker = new $window.google.maps.Marker({\n              position: { lat: place.lat, lng: place.lng },\n              map: map,\n              animation: $window.google.maps.Animation.DROP\n            });\n\n            const infowindow = new $window.google.maps.InfoWindow({\n              content: `<div>${ place.name }</div>\n              <a href=\"http://localhost:8000/#/places/${ place.id }\">Click Here To View Listings For This Place ${ place.id }</a>`\n            });\n\n            marker.addListener('click', function() {\n              infowindow.open(map,marker);\n            });\n\n          });\n        }\n      });\n\n\n      // Try HTML5 geolocation else put the user in central London.\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          const pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          map.setCenter(pos);\n          map.setZoom(18);\n        });\n      }\n\n    }\n  };\n}\n","angular.module('finalProject')\n.directive('googlePlace', googlePlace);\n\ngooglePlace.$inject = ['$window'];\n\nfunction googlePlace($window) {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      place: '='\n    },\n    link: function($scope, element, attrs, model) {\n      const options = {\n        types: [],\n        componentRestrictions: { country: 'GB' }\n      };\n\n      const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        const latLng = place.geometry.location.toJSON();\n\n        console.log(place);\n\n        $scope.place.lat = latLng.lat;\n        $scope.place.lng = latLng.lng;\n        $scope.place.google_place_id = place.place_id;\n        $scope.place.address = place.formatted_address;\n        $scope.place.phone_number = place.formatted_phone_number;\n        $scope.place.icon = place.icon;\n        $scope.place.name = place.name;\n        $scope.place.rating = place.rating;\n        $scope.place.website = place.website;\n\n        model.$setViewValue(element.val());\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .directive('imageUpload', imageUpload);\n\nfunction imageUpload () {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: '/templates/imageUpload.html',\n    scope: {\n      base64: '='\n    },\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n\n      element\n        .on('dragover', () => {\n          $scope.active = true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active = false;\n          $scope.$apply();\n        })\n        .on('drop', (e) => {\n          e.preventDefault();\n\n          const file = (e.target.files || e.dataTransfer.files)[0];\n\n          reader.readAsDataURL(file);\n        });\n    }\n  };\n}\n","angular.module('finalProject')\n  .factory('Listing', Listing);\n\nListing.$inject = ['$resource', 'API_URL'];\nfunction Listing($resource, API_URL) {\n  return new $resource(`${API_URL}/listings/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.controller('ListingsIndexController', ListingsIndexController)\n.controller('ListingsShowController', ListingsShowController)\n.controller('ListingsNewController', ListingsNewController)\n.controller('ListingsEditController', ListingsEditController);\n\nListingsIndexController.$inject = ['Listing'];\n\nfunction ListingsIndexController(Listing) {\n  const listingsIndex = this;\n\n  listingsIndex.all = Listing.query();\n}\n\nListingsShowController.$inject = ['Listing', '$state'];\nfunction ListingsShowController(Listing, $state) {\n  const listingsShow = this;\n\n  listingsShow.listing = Listing.get($state.params);\n\n  function deleteListing() {\n    listingsShow.listing.$remove(() => {\n      $state.go('listingsIndex');\n    });\n  }\n  listingsShow.delete = deleteListing;\n}\n\nListingsEditController.$inject = ['Listing', '$state'];\nfunction ListingsEditController(Listing, $state) {\n  const listingsEdit = this;\n  listingsEdit.listing = Listing.get($state.params);\n\n  function update() {\n    listingsEdit.listing.$update((listing) => {\n      $state.go('placesShow', { id: listing.place.id });\n    });\n  }\n  listingsEdit.update = update;\n}\n\nListingsNewController.$inject = ['Listing', '$state'];\nfunction ListingsNewController(Listing, $state) {\n  const listingsNew = this;\n\n  listingsNew.listing = {\n    place_id: $state.params.placeId\n  };\n\n  function submit() {\n    Listing.save(listingsNew.listing, (listing) => {\n      $state.go('placesShow', { id: listing.place.id });\n    });\n  }\n  listingsNew.submit = submit;\n}\n","angular.module('finalProject')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\n\nfunction MainController($auth, $state, $rootScope) {\n\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n    main.message = null;\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    toState.name === 'usersEdit'\n    && parseFloat(toParams.id) !== $auth.getPayload().id) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there';\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .factory('Place', Place);\n\nPlace.$inject = ['$resource', 'API_URL'];\nfunction Place($resource, API_URL) {\n  return new $resource(`${API_URL}/places/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.controller('PlacesIndexController', PlacesIndexController)\n.controller('PlacesShowController', PlacesShowController)\n.controller('PlacesNewController', PlacesNewController);\n\nPlacesIndexController.$inject = ['Place'];\nfunction PlacesIndexController(Place) {\n  const placesIndex = this;\n\n  placesIndex.all = Place.query();\n}\n\nPlacesShowController.$inject = ['Place', '$state'];\nfunction PlacesShowController(Place, $state) {\n  const placesShow = this;\n\n  placesShow.place = Place.get($state.params);\n\n  function deletePlace() {\n    placesShow.place.$remove(() => {\n      $state.go('placesIndex');\n    });\n  }\n  placesShow.delete = deletePlace;\n}\n\nPlacesEditController.$inject = ['Place', '$state'];\nfunction PlacesEditController(Place, $state) {\n  const placesEdit = this;\n\n  placesEdit.place = Place.get($state.params);\n\n  function update() {\n    placesEdit.place.$update(() => {\n      $state.go('placesShow', $state.params);\n    });\n  }\n  placesEdit.update = update;\n}\n\nPlacesNewController.$inject = ['Place', '$state'];\nfunction PlacesNewController(Place, $state) {\n  const placesNew = this;\n\n  placesNew.place = {};\n\n  function submit() {\n    Place.save(placesNew.place, (place) => {\n      console.log('gets here!');\n      $state.go('listingsNew', { placeId: place.id });\n    });\n  }\n  placesNew.submit = submit;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n\n    .state('placesIndex', {\n      url: '/places',\n      templateUrl: '/templates/placesIndex.html',\n      controller: 'PlacesIndexController as placesIndex'\n    })\n\n    .state('placesNew', {\n      url: '/places/new',\n      templateUrl: '/templates/placesNew.html',\n      controller: 'PlacesNewController as placesNew'\n    })\n\n    .state('listingsNew', {\n      url: '/places/:placeId/listings/new',\n      templateUrl: '/templates/listingsNew.html',\n      controller: 'ListingsNewController as listingsNew'\n    })\n\n    .state('placesShow', {\n      url: '/places/:id',\n      templateUrl: '/templates/placesShow.html',\n      controller: 'PlacesShowController as placesShow'\n    })\n\n    .state('listingsIndex', {\n      url: '/listings',\n      templateUrl: '/templates/listingsIndex.html',\n      controller: 'ListingsIndexController as listingsIndex'\n    })\n\n    .state('listingsEdit', {\n      url: '/listings/:id/edit',\n      templateUrl: '/templates/listingsEdit.html',\n      controller: 'ListingsEditController as listingsEdit'\n    })\n\n    .state('listingsShow', {\n      url: '/listings/:id',\n      templateUrl: '/templates/listingsShow.html',\n      controller: 'ListingsShowController as listingsShow'\n    });\n\n\n  $urlRouterProvider.otherwise('/login');\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.controller('UsersIndexController', UsersIndexController)\n.controller('UsersShowController', UsersShowController)\n.controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n\n  usersShow.currentUserId = $auth.getPayload().id; // { id: 1 }\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n\n  function isCurrentUser() {\n    return usersShow.user.id === usersShow.currentUserId;\n  }\n\n  usersShow.isCurrentUser = isCurrentUser();\n\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n  function logout() {\n    localStorage.removeItem('token');\n    $state.go('login');\n  }\n  usersEdit.logout = logout;\n\n}\n"]}
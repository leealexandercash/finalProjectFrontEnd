{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/controllers/users.js","js/models/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","$rootScope","logout","secureState","e","toState","toParams","main","message","isAuthenticated","protectedStates","includes","name","parseFloat","id","getPayload","preventDefault","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","UsersIndexController","User","usersIndex","all","query","UsersShowController","deleteUser","usersShow","$remove","isCurrentUser","currentUserId","get","params","delete","UsersEditController","update","usersEdit","$update","localStorage","removeItem","$resource","method","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\n\nfunction MainController($auth, $state, $rootScope) {\n\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n    main.message = null;\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    toState.name === 'usersEdit'\n    && parseFloat(toParams.id) !== $auth.getPayload().id) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    });\n\n  $urlRouterProvider.otherwise('/login');\n}\n","angular.module('finalProject')\n.controller('UsersIndexController', UsersIndexController)\n.controller('UsersShowController', UsersShowController)\n.controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n\n  usersShow.currentUserId = $auth.getPayload().id; // { id: 1 }\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n\n  function isCurrentUser() {\n    return usersShow.user.id === usersShow.currentUserId;\n  }\n\n  usersShow.isCurrentUser = isCurrentUser();\n\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n  function logout() {\n    localStorage.removeItem('token');\n    $state.go('login');\n  }\n  usersEdit.logout = logout;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}
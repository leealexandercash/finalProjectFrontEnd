"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function o(){e.signup(r.user).then(function(){t.go("login")})}var r=this;r.user={},r.submit=o}function LoginController(e,t){function o(){e.login(r.credentials).then(function(){t.go("usersIndex")})}var r=this;r.credentials={},r.submit=o}function googleMap(e){return{restrict:"E",replace:!0,template:'<div class="google-map">Google Map Here</div>',scope:{places:"="},link:function(t,o){var r=new e.google.maps.Map(o[0],{center:{lat:51.5087903,lng:-.1137814},zoom:14});t.$watch("places.length",function(){t.places.length>0&&t.places.forEach(function(t){var o=new e.google.maps.Marker({position:{lat:t.lat,lng:t.lng},map:r,animation:e.google.maps.Animation.DROP}),l=new e.google.maps.InfoWindow({content:"<div>"+t.name+'</div>\n              <a href="http://localhost:8000/#!/places/'+t.id+'">Click Here To View Listings For This Place '+t.id+"</a>"});o.addListener("click",function(){l.open(r,o)})})}),navigator.geolocation&&navigator.geolocation.getCurrentPosition(function(e){var t={lat:e.coords.latitude,lng:e.coords.longitude};r.setCenter(t),r.setZoom(18)})}}}function googlePlace(e){return{restrict:"A",require:"ngModel",scope:{location:"=",lat:"=",lng:"="},link:function(t,o,r,l){var n={types:[],componentRestrictions:{}},a=new e.google.maps.places.Autocomplete(o[0],n);a.addListener("place_changed",function(){var e=a.getPlace(),r=e.geometry.location.toJSON();t.lat=r.lat,t.lng=r.lng,l.$setViewValue(o.val())})}}}function MainController(e,t,o){function r(){e.logout().then(function(){t.go("usersIndex")})}function l(o,r,l){n.message=null,(!e.isAuthenticated()&&a.includes(r.name)||"usersEdit"===r.name&&parseFloat(l.id)!==e.getPayload().id)&&(o.preventDefault(),t.go("login"),n.message="You must be logged in to go there")}var n=this;n.isLoggedIn=e.isAuthenticated,n.message=null;var a=["usersEdit"];o.$on("$stateChangeStart",l),n.logout=r}function Place(e,t){return new e(t+"/places/:id",{id:"@id"},{update:{method:"PUT"}})}function PlacesIndexController(e){var t=this;t.all=e.query()}function PlacesShowController(e,t){function o(){r.place.$remove(function(){t.go("placesIndex")})}var r=this;r.place=e.get(t.params),r.delete=o}function PlacesEditController(e,t){function o(){r.place.$update(function(){t.go("placesShow",t.params)})}var r=this;r.place=e.get(t.params),this.update=o}function Router(e,t){e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("placesIndex",{url:"/places",templateUrl:"/templates/placesIndex.html",controller:"PlacesIndexController as placesIndex"}).state("placesShow",{url:"/places/:id",templateUrl:"/templates/placesShow.html",controller:"PlacesShowController as placesShow"}),t.otherwise("/login")}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,o){function r(){n.user.$remove(function(){t.go("usersIndex")})}function l(){return n.user.id===n.currentUserId}var n=this;n.user=e.get(t.params),n.delete=r,n.currentUserId=o.getPayload().id,n.isLoggedIn=o.isAuthenticated,n.isCurrentUser=l()}function UsersEditController(e,t){function o(){l.user.$update(function(){t.go("usersShow",t.params)})}function r(){localStorage.removeItem("token"),t.go("login")}var l=this;l.user=e.get(t.params),this.update=o,l.logout=r}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").directive("googleMap",googleMap),googleMap.$inject=["$window"],angular.module("finalProject").directive("googlePlace",googlePlace),googlePlace.$inject=["$window"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").factory("Place",Place),Place.$inject=["$resource","API_URL"],angular.module("finalProject").controller("PlacesIndexController",PlacesIndexController).controller("PlacesShowController",PlacesShowController),PlacesIndexController.$inject=["Place"],PlacesShowController.$inject=["Place","$state"],PlacesEditController.$inject=["Place","$state"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"];
//# sourceMappingURL=app.js.map
